// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type TransformationExecutorOutputRequestBody struct {
	typeName                                                                       string
	StringOptional                                                                 *string
	TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody *TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody
}

func NewTransformationExecutorOutputRequestBodyFromStringOptional(value *string) *TransformationExecutorOutputRequestBody {
	return &TransformationExecutorOutputRequestBody{typeName: "stringOptional", StringOptional: value}
}

func NewTransformationExecutorOutputRequestBodyFromTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody(value *TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody) *TransformationExecutorOutputRequestBody {
	return &TransformationExecutorOutputRequestBody{typeName: "transformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody", TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody: value}
}

func (t *TransformationExecutorOutputRequestBody) UnmarshalJSON(data []byte) error {
	var valueStringOptional *string
	if err := json.Unmarshal(data, &valueStringOptional); err == nil {
		t.typeName = "stringOptional"
		t.StringOptional = valueStringOptional
		return nil
	}
	valueTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody := new(TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody)
	if err := json.Unmarshal(data, &valueTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody); err == nil {
		t.typeName = "transformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody"
		t.TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody = valueTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestBody) MarshalJSON() ([]byte, error) {
	switch t.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "stringOptional":
		return json.Marshal(t.StringOptional)
	case "transformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody":
		return json.Marshal(t.TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody)
	}
}

type TransformationExecutorOutputRequestBodyVisitor interface {
	VisitStringOptional(*string) error
	VisitTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody(*TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody) error
}

func (t *TransformationExecutorOutputRequestBody) Accept(v TransformationExecutorOutputRequestBodyVisitor) error {
	switch t.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "stringOptional":
		return v.VisitStringOptional(t.StringOptional)
	case "transformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody":
		return v.VisitTransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody(t.TransformationExecutorOutputRequestBodyTransformationExecutorOutputRequestBody)
	}
}
