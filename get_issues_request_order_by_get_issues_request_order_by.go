// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type GetIssuesRequestOrderByGetIssuesRequestOrderBy uint8

const (
	GetIssuesRequestOrderByGetIssuesRequestOrderByCreatedAt GetIssuesRequestOrderByGetIssuesRequestOrderBy = iota + 1
	GetIssuesRequestOrderByGetIssuesRequestOrderByFirstSeenAt
	GetIssuesRequestOrderByGetIssuesRequestOrderByLastSeenAt
	GetIssuesRequestOrderByGetIssuesRequestOrderByOpenedAt
	GetIssuesRequestOrderByGetIssuesRequestOrderByStatus
)

func (g GetIssuesRequestOrderByGetIssuesRequestOrderBy) String() string {
	switch g {
	default:
		return strconv.Itoa(int(g))
	case GetIssuesRequestOrderByGetIssuesRequestOrderByCreatedAt:
		return "created_at"
	case GetIssuesRequestOrderByGetIssuesRequestOrderByFirstSeenAt:
		return "first_seen_at"
	case GetIssuesRequestOrderByGetIssuesRequestOrderByLastSeenAt:
		return "last_seen_at"
	case GetIssuesRequestOrderByGetIssuesRequestOrderByOpenedAt:
		return "opened_at"
	case GetIssuesRequestOrderByGetIssuesRequestOrderByStatus:
		return "status"
	}
}

func (g GetIssuesRequestOrderByGetIssuesRequestOrderBy) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", g.String())), nil
}

func (g *GetIssuesRequestOrderByGetIssuesRequestOrderBy) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "created_at":
		value := GetIssuesRequestOrderByGetIssuesRequestOrderByCreatedAt
		*g = value
	case "first_seen_at":
		value := GetIssuesRequestOrderByGetIssuesRequestOrderByFirstSeenAt
		*g = value
	case "last_seen_at":
		value := GetIssuesRequestOrderByGetIssuesRequestOrderByLastSeenAt
		*g = value
	case "opened_at":
		value := GetIssuesRequestOrderByGetIssuesRequestOrderByOpenedAt
		*g = value
	case "status":
		value := GetIssuesRequestOrderByGetIssuesRequestOrderByStatus
		*g = value
	}
	return nil
}
