// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Issue status
type GetIssuesRequestStatusGetIssuesRequestStatus uint8

const (
	GetIssuesRequestStatusGetIssuesRequestStatusOpened GetIssuesRequestStatusGetIssuesRequestStatus = iota + 1
	GetIssuesRequestStatusGetIssuesRequestStatusIgnored
	GetIssuesRequestStatusGetIssuesRequestStatusAcknowledged
	GetIssuesRequestStatusGetIssuesRequestStatusResolved
)

func (g GetIssuesRequestStatusGetIssuesRequestStatus) String() string {
	switch g {
	default:
		return strconv.Itoa(int(g))
	case GetIssuesRequestStatusGetIssuesRequestStatusOpened:
		return "OPENED"
	case GetIssuesRequestStatusGetIssuesRequestStatusIgnored:
		return "IGNORED"
	case GetIssuesRequestStatusGetIssuesRequestStatusAcknowledged:
		return "ACKNOWLEDGED"
	case GetIssuesRequestStatusGetIssuesRequestStatusResolved:
		return "RESOLVED"
	}
}

func (g GetIssuesRequestStatusGetIssuesRequestStatus) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", g.String())), nil
}

func (g *GetIssuesRequestStatusGetIssuesRequestStatus) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "OPENED":
		value := GetIssuesRequestStatusGetIssuesRequestStatusOpened
		*g = value
	case "IGNORED":
		value := GetIssuesRequestStatusGetIssuesRequestStatusIgnored
		*g = value
	case "ACKNOWLEDGED":
		value := GetIssuesRequestStatusGetIssuesRequestStatusAcknowledged
		*g = value
	case "RESOLVED":
		value := GetIssuesRequestStatusGetIssuesRequestStatusResolved
		*g = value
	}
	return nil
}
