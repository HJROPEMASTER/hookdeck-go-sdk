// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

type TransformationExecutorOutputRequestQuery struct {
	typeName                                                                                 string
	TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional *TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQuery
	String                                                                                   string
}

func NewTransformationExecutorOutputRequestQueryFromTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional(value *TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQuery) *TransformationExecutorOutputRequestQuery {
	return &TransformationExecutorOutputRequestQuery{typeName: "transformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional", TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional: value}
}

func NewTransformationExecutorOutputRequestQueryFromString(value string) *TransformationExecutorOutputRequestQuery {
	return &TransformationExecutorOutputRequestQuery{typeName: "string", String: value}
}

func (t *TransformationExecutorOutputRequestQuery) UnmarshalJSON(data []byte) error {
	var valueTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional *TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQuery
	if err := json.Unmarshal(data, &valueTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional); err == nil {
		t.typeName = "transformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional"
		t.TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional = valueTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional
		return nil
	}
	var valueString string
	if err := json.Unmarshal(data, &valueString); err == nil {
		t.typeName = "string"
		t.String = valueString
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestQuery) MarshalJSON() ([]byte, error) {
	switch t.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "transformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional":
		return json.Marshal(t.TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional)
	case "string":
		return json.Marshal(t.String)
	}
}

type TransformationExecutorOutputRequestQueryVisitor interface {
	VisitTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional(*TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQuery) error
	VisitString(string) error
}

func (t *TransformationExecutorOutputRequestQuery) Accept(v TransformationExecutorOutputRequestQueryVisitor) error {
	switch t.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", t.typeName, t)
	case "transformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional":
		return v.VisitTransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional(t.TransformationExecutorOutputRequestQueryTransformationExecutorOutputRequestQueryOptional)
	case "string":
		return v.VisitString(t.String)
	}
}
