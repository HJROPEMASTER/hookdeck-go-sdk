// This file was auto-generated by Fern from our API Definition.

package api

import (
	core "github.com/fern-hookdeck/hookdeck-go/core"
	http "net/http"
)

type Client interface {
	IssueTriggers() IssueTriggersClient
	Attempts() AttemptsClient
	Bookmarks() BookmarksClient
	Destinations() DestinationsClient
	Events() EventsClient
	BulkRetryEvents() BulkRetryEventsClient
	BulkRetryIgnoredEvents() BulkRetryIgnoredEventsClient
	Integrations() IntegrationsClient
	Issues() IssuesClient
	Requests() RequestsClient
	BulkRetryRequests() BulkRetryRequestsClient
	Rulesets() RulesetsClient
	Sources() SourcesClient
	Notifications() NotificationsClient
	Transformations() TransformationsClient
	Connections() ConnectionsClient
}

func NewClient(opts ...core.ClientOption) Client {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &client{
		baseURL:                      options.BaseURL,
		httpClient:                   options.HTTPClient,
		header:                       options.ToHeader(),
		issueTriggersClient:          NewIssueTriggersClient(opts...),
		attemptsClient:               NewAttemptsClient(opts...),
		bookmarksClient:              NewBookmarksClient(opts...),
		destinationsClient:           NewDestinationsClient(opts...),
		eventsClient:                 NewEventsClient(opts...),
		bulkRetryEventsClient:        NewBulkRetryEventsClient(opts...),
		bulkRetryIgnoredEventsClient: NewBulkRetryIgnoredEventsClient(opts...),
		integrationsClient:           NewIntegrationsClient(opts...),
		issuesClient:                 NewIssuesClient(opts...),
		requestsClient:               NewRequestsClient(opts...),
		bulkRetryRequestsClient:      NewBulkRetryRequestsClient(opts...),
		rulesetsClient:               NewRulesetsClient(opts...),
		sourcesClient:                NewSourcesClient(opts...),
		notificationsClient:          NewNotificationsClient(opts...),
		transformationsClient:        NewTransformationsClient(opts...),
		connectionsClient:            NewConnectionsClient(opts...),
	}
}

type client struct {
	baseURL                      string
	httpClient                   core.HTTPClient
	header                       http.Header
	issueTriggersClient          IssueTriggersClient
	attemptsClient               AttemptsClient
	bookmarksClient              BookmarksClient
	destinationsClient           DestinationsClient
	eventsClient                 EventsClient
	bulkRetryEventsClient        BulkRetryEventsClient
	bulkRetryIgnoredEventsClient BulkRetryIgnoredEventsClient
	integrationsClient           IntegrationsClient
	issuesClient                 IssuesClient
	requestsClient               RequestsClient
	bulkRetryRequestsClient      BulkRetryRequestsClient
	rulesetsClient               RulesetsClient
	sourcesClient                SourcesClient
	notificationsClient          NotificationsClient
	transformationsClient        TransformationsClient
	connectionsClient            ConnectionsClient
}

func (c *client) IssueTriggers() IssueTriggersClient {
	return c.issueTriggersClient
}

func (c *client) Attempts() AttemptsClient {
	return c.attemptsClient
}

func (c *client) Bookmarks() BookmarksClient {
	return c.bookmarksClient
}

func (c *client) Destinations() DestinationsClient {
	return c.destinationsClient
}

func (c *client) Events() EventsClient {
	return c.eventsClient
}

func (c *client) BulkRetryEvents() BulkRetryEventsClient {
	return c.bulkRetryEventsClient
}

func (c *client) BulkRetryIgnoredEvents() BulkRetryIgnoredEventsClient {
	return c.bulkRetryIgnoredEventsClient
}

func (c *client) Integrations() IntegrationsClient {
	return c.integrationsClient
}

func (c *client) Issues() IssuesClient {
	return c.issuesClient
}

func (c *client) Requests() RequestsClient {
	return c.requestsClient
}

func (c *client) BulkRetryRequests() BulkRetryRequestsClient {
	return c.bulkRetryRequestsClient
}

func (c *client) Rulesets() RulesetsClient {
	return c.rulesetsClient
}

func (c *client) Sources() SourcesClient {
	return c.sourcesClient
}

func (c *client) Notifications() NotificationsClient {
	return c.notificationsClient
}

func (c *client) Transformations() TransformationsClient {
	return c.transformationsClient
}

func (c *client) Connections() ConnectionsClient {
	return c.connectionsClient
}
