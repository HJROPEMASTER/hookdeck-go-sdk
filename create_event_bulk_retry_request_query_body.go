// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
)

// URL Encoded string of the JSON to match to the data body
type CreateEventBulkRetryRequestQueryBody struct {
	typeName                                                                 string
	String                                                                   string
	CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody *CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody
}

func NewCreateEventBulkRetryRequestQueryBodyFromString(value string) *CreateEventBulkRetryRequestQueryBody {
	return &CreateEventBulkRetryRequestQueryBody{typeName: "string", String: value}
}

func NewCreateEventBulkRetryRequestQueryBodyFromCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody(value *CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody) *CreateEventBulkRetryRequestQueryBody {
	return &CreateEventBulkRetryRequestQueryBody{typeName: "createEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody", CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody: value}
}

func (c *CreateEventBulkRetryRequestQueryBody) UnmarshalJSON(data []byte) error {
	var valueString string
	if err := json.Unmarshal(data, &valueString); err == nil {
		c.typeName = "string"
		c.String = valueString
		return nil
	}
	valueCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody := new(CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody)
	if err := json.Unmarshal(data, &valueCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody); err == nil {
		c.typeName = "createEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody"
		c.CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody = valueCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, c)
}

func (c CreateEventBulkRetryRequestQueryBody) MarshalJSON() ([]byte, error) {
	switch c.typeName {
	default:
		return nil, fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "string":
		return json.Marshal(c.String)
	case "createEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody":
		return json.Marshal(c.CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody)
	}
}

type CreateEventBulkRetryRequestQueryBodyVisitor interface {
	VisitString(string) error
	VisitCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody(*CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody) error
}

func (c *CreateEventBulkRetryRequestQueryBody) Accept(v CreateEventBulkRetryRequestQueryBodyVisitor) error {
	switch c.typeName {
	default:
		return fmt.Errorf("invalid type %s in %T", c.typeName, c)
	case "string":
		return v.VisitString(c.String)
	case "createEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody":
		return v.VisitCreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody(c.CreateEventBulkRetryRequestQueryBodyCreateEventBulkRetryRequestQueryBody)
	}
}
