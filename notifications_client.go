// This file was auto-generated by Fern from our API Definition.

package api

import (
	context "context"
	core "github.com/fern-hookdeck/hookdeck-go/core"
	http "net/http"
)

type NotificationsClient interface {
	ToggleWebhookNotifications(ctx context.Context, request *ToggleWebhookNotificationsRequest) (*ToggleWebhookNotifications, error)
}

func NewNotificationsClient(opts ...core.ClientOption) NotificationsClient {
	options := core.NewClientOptions()
	for _, opt := range opts {
		opt(options)
	}
	return &notificationsClient{
		baseURL:    options.BaseURL,
		httpClient: options.HTTPClient,
		header:     options.ToHeader(),
	}
}

type notificationsClient struct {
	baseURL    string
	httpClient core.HTTPClient
	header     http.Header
}

func (n *notificationsClient) ToggleWebhookNotifications(ctx context.Context, request *ToggleWebhookNotificationsRequest) (*ToggleWebhookNotifications, error) {
	baseURL := "https://api.hookdeck.com/2023-01-01"
	if n.baseURL != "" {
		baseURL = n.baseURL
	}
	endpointURL := baseURL + "/" + "notifications/webhooks"

	response := new(ToggleWebhookNotifications)
	if err := core.DoRequest(
		ctx,
		n.httpClient,
		endpointURL,
		http.MethodPut,
		request,
		&response,
		n.header,
		nil,
	); err != nil {
		return response, err
	}
	return response, nil
}
