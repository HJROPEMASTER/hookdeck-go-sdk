// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// The strategy uses to open the issue
type IssueTriggerStrategy uint8

const (
	IssueTriggerStrategyFirstAttempt IssueTriggerStrategy = iota + 1
	IssueTriggerStrategyFinalAttempt
)

func (i IssueTriggerStrategy) String() string {
	switch i {
	default:
		return strconv.Itoa(int(i))
	case IssueTriggerStrategyFirstAttempt:
		return "first_attempt"
	case IssueTriggerStrategyFinalAttempt:
		return "final_attempt"
	}
}

func (i IssueTriggerStrategy) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", i.String())), nil
}

func (i *IssueTriggerStrategy) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "first_attempt":
		value := IssueTriggerStrategyFirstAttempt
		*i = value
	case "final_attempt":
		value := IssueTriggerStrategyFinalAttempt
		*i = value
	}
	return nil
}
