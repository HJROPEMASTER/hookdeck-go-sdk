// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
)

type FilterRule struct {
	Headers *ConnectionFilterProperty `json:"headers,omitempty"`
	Body    *ConnectionFilterProperty `json:"body,omitempty"`
	Query   *ConnectionFilterProperty `json:"query,omitempty"`
	Path    *ConnectionFilterProperty `json:"path,omitempty"`
	type_   string
}

func (f *FilterRule) Type() string {
	return f.type_
}

func (f *FilterRule) UnmarshalJSON(data []byte) error {
	type unmarshaler FilterRule
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = FilterRule(value)
	f.type_ = "filter"
	return nil
}

func (f *FilterRule) MarshalJSON() ([]byte, error) {
	type embed FilterRule
	var marshaler = struct {
		embed
		Type string `json:"type"`
	}{
		embed: embed(*f),
		Type:  "filter",
	}
	return json.Marshal(marshaler)
}
