// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Algorithm to use when calculating delay between retries
type RetryStrategy uint8

const (
	RetryStrategyLinear RetryStrategy = iota + 1
	RetryStrategyExponential
)

func (r RetryStrategy) String() string {
	switch r {
	default:
		return strconv.Itoa(int(r))
	case RetryStrategyLinear:
		return "linear"
	case RetryStrategyExponential:
		return "exponential"
	}
}

func (r RetryStrategy) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", r.String())), nil
}

func (r *RetryStrategy) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "linear":
		value := RetryStrategyLinear
		*r = value
	case "exponential":
		value := RetryStrategyExponential
		*r = value
	}
	return nil
}
