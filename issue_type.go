// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Issue type
type IssueType uint8

const (
	IssueTypeDelivery IssueType = iota + 1
	IssueTypeTransformation
	IssueTypeBackpressure
)

func (i IssueType) String() string {
	switch i {
	default:
		return strconv.Itoa(int(i))
	case IssueTypeDelivery:
		return "delivery"
	case IssueTypeTransformation:
		return "transformation"
	case IssueTypeBackpressure:
		return "backpressure"
	}
}

func (i IssueType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", i.String())), nil
}

func (i *IssueType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "delivery":
		value := IssueTypeDelivery
		*i = value
	case "transformation":
		value := IssueTypeTransformation
		*i = value
	case "backpressure":
		value := IssueTypeBackpressure
		*i = value
	}
	return nil
}
