// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Issue status
type IssueStatus uint8

const (
	IssueStatusOpened IssueStatus = iota + 1
	IssueStatusIgnored
	IssueStatusAcknowledged
	IssueStatusResolved
)

func (i IssueStatus) String() string {
	switch i {
	default:
		return strconv.Itoa(int(i))
	case IssueStatusOpened:
		return "OPENED"
	case IssueStatusIgnored:
		return "IGNORED"
	case IssueStatusAcknowledged:
		return "ACKNOWLEDGED"
	case IssueStatusResolved:
		return "RESOLVED"
	}
}

func (i IssueStatus) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", i.String())), nil
}

func (i *IssueStatus) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "OPENED":
		value := IssueStatusOpened
		*i = value
	case "IGNORED":
		value := IssueStatusIgnored
		*i = value
	case "ACKNOWLEDGED":
		value := IssueStatusAcknowledged
		*i = value
	case "RESOLVED":
		value := IssueStatusResolved
		*i = value
	}
	return nil
}
