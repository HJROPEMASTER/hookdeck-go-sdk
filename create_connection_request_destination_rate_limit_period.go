// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Period to rate limit attempts
type CreateConnectionRequestDestinationRateLimitPeriod uint8

const (
	CreateConnectionRequestDestinationRateLimitPeriodSecond CreateConnectionRequestDestinationRateLimitPeriod = iota + 1
	CreateConnectionRequestDestinationRateLimitPeriodMinute
	CreateConnectionRequestDestinationRateLimitPeriodHour
)

func (c CreateConnectionRequestDestinationRateLimitPeriod) String() string {
	switch c {
	default:
		return strconv.Itoa(int(c))
	case CreateConnectionRequestDestinationRateLimitPeriodSecond:
		return "second"
	case CreateConnectionRequestDestinationRateLimitPeriodMinute:
		return "minute"
	case CreateConnectionRequestDestinationRateLimitPeriodHour:
		return "hour"
	}
}

func (c CreateConnectionRequestDestinationRateLimitPeriod) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", c.String())), nil
}

func (c *CreateConnectionRequestDestinationRateLimitPeriod) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "second":
		value := CreateConnectionRequestDestinationRateLimitPeriodSecond
		*c = value
	case "minute":
		value := CreateConnectionRequestDestinationRateLimitPeriodMinute
		*c = value
	case "hour":
		value := CreateConnectionRequestDestinationRateLimitPeriodHour
		*c = value
	}
	return nil
}
