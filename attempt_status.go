// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Attempt status
type AttemptStatus uint8

const (
	AttemptStatusQueued AttemptStatus = iota + 1
	AttemptStatusFailed
	AttemptStatusSuccessful
	AttemptStatusHold
)

func (a AttemptStatus) String() string {
	switch a {
	default:
		return strconv.Itoa(int(a))
	case AttemptStatusQueued:
		return "QUEUED"
	case AttemptStatusFailed:
		return "FAILED"
	case AttemptStatusSuccessful:
		return "SUCCESSFUL"
	case AttemptStatusHold:
		return "HOLD"
	}
}

func (a AttemptStatus) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", a.String())), nil
}

func (a *AttemptStatus) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "QUEUED":
		value := AttemptStatusQueued
		*a = value
	case "FAILED":
		value := AttemptStatusFailed
		*a = value
	case "SUCCESSFUL":
		value := AttemptStatusSuccessful
		*a = value
	case "HOLD":
		value := AttemptStatusHold
		*a = value
	}
	return nil
}
