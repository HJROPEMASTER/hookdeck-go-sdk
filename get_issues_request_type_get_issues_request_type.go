// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Issue type
type GetIssuesRequestTypeGetIssuesRequestType uint8

const (
	GetIssuesRequestTypeGetIssuesRequestTypeDelivery GetIssuesRequestTypeGetIssuesRequestType = iota + 1
	GetIssuesRequestTypeGetIssuesRequestTypeTransformation
	GetIssuesRequestTypeGetIssuesRequestTypeBackpressure
)

func (g GetIssuesRequestTypeGetIssuesRequestType) String() string {
	switch g {
	default:
		return strconv.Itoa(int(g))
	case GetIssuesRequestTypeGetIssuesRequestTypeDelivery:
		return "delivery"
	case GetIssuesRequestTypeGetIssuesRequestTypeTransformation:
		return "transformation"
	case GetIssuesRequestTypeGetIssuesRequestTypeBackpressure:
		return "backpressure"
	}
}

func (g GetIssuesRequestTypeGetIssuesRequestType) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", g.String())), nil
}

func (g *GetIssuesRequestTypeGetIssuesRequestType) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "delivery":
		value := GetIssuesRequestTypeGetIssuesRequestTypeDelivery
		*g = value
	case "transformation":
		value := GetIssuesRequestTypeGetIssuesRequestTypeTransformation
		*g = value
	case "backpressure":
		value := GetIssuesRequestTypeGetIssuesRequestTypeBackpressure
		*g = value
	}
	return nil
}
