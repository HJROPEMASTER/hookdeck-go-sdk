// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
)

type TransformReference struct {
	// ID of the attached transformation object. Optional input, always set once the rule is defined
	TransformationId string `json:"transformation_id,omitempty"`
	type_            string
}

func (t *TransformReference) Type() string {
	return t.type_
}

func (t *TransformReference) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformReference
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformReference(value)
	t.type_ = "transform"
	return nil
}

func (t *TransformReference) MarshalJSON() ([]byte, error) {
	type embed TransformReference
	var marshaler = struct {
		embed
		Type string `json:"type,omitempty"`
	}{
		embed: embed(*t),
		Type:  "transform",
	}
	return json.Marshal(marshaler)
}
