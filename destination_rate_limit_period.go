// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

// Period to rate limit attempts
type DestinationRateLimitPeriod uint8

const (
	DestinationRateLimitPeriodSecond DestinationRateLimitPeriod = iota + 1
	DestinationRateLimitPeriodMinute
	DestinationRateLimitPeriodHour
)

func (d DestinationRateLimitPeriod) String() string {
	switch d {
	default:
		return strconv.Itoa(int(d))
	case DestinationRateLimitPeriodSecond:
		return "second"
	case DestinationRateLimitPeriodMinute:
		return "minute"
	case DestinationRateLimitPeriodHour:
		return "hour"
	}
}

func (d DestinationRateLimitPeriod) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", d.String())), nil
}

func (d *DestinationRateLimitPeriod) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "second":
		value := DestinationRateLimitPeriodSecond
		*d = value
	case "minute":
		value := DestinationRateLimitPeriodMinute
		*d = value
	case "hour":
		value := DestinationRateLimitPeriodHour
		*d = value
	}
	return nil
}
