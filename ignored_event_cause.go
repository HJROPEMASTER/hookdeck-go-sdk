// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	strconv "strconv"
)

type IgnoredEventCause uint8

const (
	IgnoredEventCauseArchived IgnoredEventCause = iota + 1
	IgnoredEventCauseFiltered
	IgnoredEventCauseTransformationFailed
	IgnoredEventCauseCliDisconnected
)

func (i IgnoredEventCause) String() string {
	switch i {
	default:
		return strconv.Itoa(int(i))
	case IgnoredEventCauseArchived:
		return "ARCHIVED"
	case IgnoredEventCauseFiltered:
		return "FILTERED"
	case IgnoredEventCauseTransformationFailed:
		return "TRANSFORMATION_FAILED"
	case IgnoredEventCauseCliDisconnected:
		return "CLI_DISCONNECTED"
	}
}

func (i IgnoredEventCause) MarshalJSON() ([]byte, error) {
	return []byte(fmt.Sprintf("%q", i.String())), nil
}

func (i *IgnoredEventCause) UnmarshalJSON(data []byte) error {
	var raw string
	if err := json.Unmarshal(data, &raw); err != nil {
		return err
	}
	switch raw {
	case "ARCHIVED":
		value := IgnoredEventCauseArchived
		*i = value
	case "FILTERED":
		value := IgnoredEventCauseFiltered
		*i = value
	case "TRANSFORMATION_FAILED":
		value := IgnoredEventCauseTransformationFailed
		*i = value
	case "CLI_DISCONNECTED":
		value := IgnoredEventCauseCliDisconnected
		*i = value
	}
	return nil
}
